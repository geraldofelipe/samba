vulpe.ng.app.controller("IndexController",["$rootScope","$scope","VulpeJS",function(a,d,c){var e=new c().init(d);e.timeout.cancel();e.item={url:""};e.jobs=function(){e.http.get({url:"/jobs",callback:function(f){e.items=f;e.items.forEach(function(g){if(g.job.state!=="finished"){e.progress(g.job.id)}})}})};var b=function(){e.timeout.add(function(){e.ui.focus("url")},100)};e.model.create=function(){e.ui.showing=true;e.item.url="";b()};e.cancel=function(f){if(f){e.http.get({url:"/job/cancel/"+f,callback:function(g){e.jobs();e.message.success("Video encoding successfully cancelled!")}})}else{e.ui.showing=false;e.item.url=""}};e.progress=function(f){e.http.get({url:"/job/progress/"+f,callback:function(k){for(var h=0,g=e.items.length;h<g;++h){var j=e.items[h];if(j.job.id===f){j.job.state=k.state;if(k.state!=="finished"){e.timeout.add(function(){e.progress(f)},1000)}break}}}})};e.send=function(){e.message.clean();if(e.item.url&&e.item.url.length>0){if(!vulpe.utils.regex.weburl.test(e.item.url)){e.message.error("Please, enter a valid URL.");b();return}e.http.post({url:"/job",data:e.item,callback:{success:function(f){e.item.url="";e.jobs();e.ui.showing=false;e.message.success("Video successfully sent to encode!")},error:function(f){e.message.error("Unable to send the video to encode.")}}})}else{e.message.info("Please, enter the video URL to encode!");b()}};e.on.ready(function(){e.ui.active("index",true);e.jobs()})}]);